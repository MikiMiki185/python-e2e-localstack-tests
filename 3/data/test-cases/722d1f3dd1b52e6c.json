{"uid":"722d1f3dd1b52e6c","name":"test_successful_get_users","fullName":"tests.api.test_get_users#test_successful_get_users","historyId":"f28f5dfdce1472a9aa344482e4ee76a1","time":{"start":1718346696488,"stop":1718346696488,"duration":0},"status":"broken","statusMessage":"requests.exceptions.MissingSchema: Invalid URL 'None/users/signup': No scheme supplied. Perhaps you meant https://None/users/signup?","statusTrace":"@pytest.fixture\n    def api_logged_in():\n>       user = setup_test_user()\n\ntests/conftest.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:53: in setup_test_user\n    register_response = SignUp().api_call(user)\napi/post_sign_up.py:8: in api_call\n    response = self.make_request(\"POST\", \"users/signup\", json=user_data, headers=headers)\napi/base_api.py:35: in make_request\n    response = requests.request(method, url, **kwargs)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/requests/api.py:59: in request\n    return session.request(method=method, url=url, **kwargs)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/requests/sessions.py:575: in request\n    prep = self.prepare_request(req)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/requests/sessions.py:486: in prepare_request\n    p.prepare(\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/requests/models.py:368: in prepare\n    self.prepare_url(url, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <PreparedRequest [POST]>, url = 'None/users/signup'\nparams = OrderedDict()\n\n    def prepare_url(self, url, params):\n        \"\"\"Prepares the given HTTP URL.\"\"\"\n        #: Accept objects that have string representations.\n        #: We're unable to blindly call unicode/str functions\n        #: as this will include the bytestring indicator (b'')\n        #: on python 3.x.\n        #: https://github.com/psf/requests/pull/2238\n        if isinstance(url, bytes):\n            url = url.decode(\"utf8\")\n        else:\n            url = str(url)\n    \n        # Remove leading whitespaces from url\n        url = url.lstrip()\n    \n        # Don't do any URL preparation for non-HTTP schemes like `mailto`,\n        # `data` etc to work around exceptions from `url_parse`, which\n        # handles RFC 3986 only.\n        if \":\" in url and not url.lower().startswith(\"http\"):\n            self.url = url\n            return\n    \n        # Support for unicode domain names and paths.\n        try:\n            scheme, auth, host, port, path, query, fragment = parse_url(url)\n        except LocationParseError as e:\n            raise InvalidURL(*e.args)\n    \n        if not scheme:\n>           raise MissingSchema(\n                f\"Invalid URL {url!r}: No scheme supplied. \"\n                f\"Perhaps you meant https://{url}?\"\n            )\nE           requests.exceptions.MissingSchema: Invalid URL 'None/users/signup': No scheme supplied. Perhaps you meant https://None/users/signup?\n\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/requests/models.py:439: MissingSchema","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1718346696141,"stop":1718346696159,"duration":18},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"api_logged_in","time":{"start":1718346696489,"stop":1718346696490,"duration":1},"status":"broken","statusMessage":"requests.exceptions.MissingSchema: Invalid URL 'None/users/signup': No scheme supplied. Perhaps you meant https://None/users/signup?\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1132, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 906, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/python-e2e-localstack-tests/python-e2e-localstack-tests/tests/conftest.py\", line 43, in api_logged_in\n    user = setup_test_user()\n           ^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/python-e2e-localstack-tests/python-e2e-localstack-tests/tests/conftest.py\", line 53, in setup_test_user\n    register_response = SignUp().api_call(user)\n                        ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/python-e2e-localstack-tests/python-e2e-localstack-tests/api/post_sign_up.py\", line 8, in api_call\n    response = self.make_request(\"POST\", \"users/signup\", json=user_data, headers=headers)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/python-e2e-localstack-tests/python-e2e-localstack-tests/api/base_api.py\", line 35, in make_request\n    response = requests.request(method, url, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/requests/api.py\", line 59, in request\n    return session.request(method=method, url=url, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/requests/sessions.py\", line 575, in request\n    prep = self.prepare_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/requests/sessions.py\", line 486, in prepare_request\n    p.prepare(\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/requests/models.py\", line 368, in prepare\n    self.prepare_url(url, params)\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/requests/models.py\", line 439, in prepare_url\n    raise MissingSchema(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"testStage":{"status":"broken","statusMessage":"requests.exceptions.MissingSchema: Invalid URL 'None/users/signup': No scheme supplied. Perhaps you meant https://None/users/signup?","statusTrace":"@pytest.fixture\n    def api_logged_in():\n>       user = setup_test_user()\n\ntests/conftest.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:53: in setup_test_user\n    register_response = SignUp().api_call(user)\napi/post_sign_up.py:8: in api_call\n    response = self.make_request(\"POST\", \"users/signup\", json=user_data, headers=headers)\napi/base_api.py:35: in make_request\n    response = requests.request(method, url, **kwargs)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/requests/api.py:59: in request\n    return session.request(method=method, url=url, **kwargs)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/requests/sessions.py:575: in request\n    prep = self.prepare_request(req)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/requests/sessions.py:486: in prepare_request\n    p.prepare(\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/requests/models.py:368: in prepare\n    self.prepare_url(url, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <PreparedRequest [POST]>, url = 'None/users/signup'\nparams = OrderedDict()\n\n    def prepare_url(self, url, params):\n        \"\"\"Prepares the given HTTP URL.\"\"\"\n        #: Accept objects that have string representations.\n        #: We're unable to blindly call unicode/str functions\n        #: as this will include the bytestring indicator (b'')\n        #: on python 3.x.\n        #: https://github.com/psf/requests/pull/2238\n        if isinstance(url, bytes):\n            url = url.decode(\"utf8\")\n        else:\n            url = str(url)\n    \n        # Remove leading whitespaces from url\n        url = url.lstrip()\n    \n        # Don't do any URL preparation for non-HTTP schemes like `mailto`,\n        # `data` etc to work around exceptions from `url_parse`, which\n        # handles RFC 3986 only.\n        if \":\" in url and not url.lower().startswith(\"http\"):\n            self.url = url\n            return\n    \n        # Support for unicode domain names and paths.\n        try:\n            scheme, auth, host, port, path, query, fragment = parse_url(url)\n        except LocationParseError as e:\n            raise InvalidURL(*e.args)\n    \n        if not scheme:\n>           raise MissingSchema(\n                f\"Invalid URL {url!r}: No scheme supplied. \"\n                f\"Perhaps you meant https://{url}?\"\n            )\nE           requests.exceptions.MissingSchema: Invalid URL 'None/users/signup': No scheme supplied. Perhaps you meant https://None/users/signup?\n\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/requests/models.py:439: MissingSchema","steps":[],"attachments":[{"uid":"e4db5ccdd5756250","name":"log","source":"e4db5ccdd5756250.txt","type":"text/plain","size":453}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests.api"},{"name":"suite","value":"test_get_users"},{"name":"host","value":"fv-az849-696"},{"name":"thread","value":"3430-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.api.test_get_users"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":2,"unknown":0,"total":3},"items":[{"uid":"dfc638be1648aded","reportUrl":"https://MikiMiki185.github.io/python-e2e-localstack-tests/2//#testresult/dfc638be1648aded","status":"passed","time":{"start":1718345432325,"stop":1718345432368,"duration":43}},{"uid":"31e4a105c33b7507","reportUrl":"https://MikiMiki185.github.io/python-e2e-localstack-tests/1//#testresult/31e4a105c33b7507","status":"passed","time":{"start":1718316577268,"stop":1718316577314,"duration":46}}]},"tags":[]},"source":"722d1f3dd1b52e6c.json","parameterValues":[]}